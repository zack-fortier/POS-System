// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SP19.P05.Web.Data;

namespace SP19.P05.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190213193747_InitialDomain")]
    partial class InitialDomain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SP19.P04.Web.Features.Authorization.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Server"
                        });
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Authorization.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(1024);

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("Phone")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Authorization.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.LineItems.LineItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(128);

                    b.Property<int>("ReceiptId");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.LineItems.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512);

                    b.Property<int>("MenuId");

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(1024);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(38,16)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Menus.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Payments.PaymentOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<string>("Nickname")
                        .HasMaxLength(16);

                    b.Property<string>("TokenizedCardReference")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("PaymentOption");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Payments.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthNumber")
                        .HasMaxLength(16);

                    b.Property<DateTimeOffset>("DateOfPaymentUtc");

                    b.Property<int>("PaymentOptionId");

                    b.Property<string>("ReferenceNumber")
                        .HasMaxLength(16);

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(38,16)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentOptionId");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Tables.CustomerTableBill", b =>
                {
                    b.Property<int>("TableBillId");

                    b.Property<int>("CustomerId");

                    b.HasKey("TableBillId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerTableBill");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Tables.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("NumberOfSeats");

                    b.HasKey("Id");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Tables.TableBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("EndDateUtc");

                    b.Property<DateTimeOffset>("StartDateUtc");

                    b.Property<int>("TableId");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("TableBill");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Tables.TableFoodItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(38,16)");

                    b.Property<int>("MenuItemId");

                    b.Property<long>("QuantityOrdered");

                    b.Property<int>("TableBillId");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("TableBillId");

                    b.ToTable("TableFoodItem");
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Authorization.UserRole", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.Authorization.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SP19.P04.Web.Features.Authorization.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Customers.Customer", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.Authorization.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("SP19.P04.Web.Features.Shared.Address", "MailingAddress", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasMaxLength(64);

                            b1.Property<string>("Line1")
                                .HasMaxLength(64);

                            b1.Property<string>("Line2")
                                .HasMaxLength(64);

                            b1.Property<string>("State")
                                .HasMaxLength(2);

                            b1.Property<string>("ZipCode")
                                .HasMaxLength(5);

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customer");

                            b1.HasOne("SP19.P04.Web.Features.Customers.Customer")
                                .WithOne("MailingAddress")
                                .HasForeignKey("SP19.P04.Web.Features.Shared.Address", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("SP19.P04.Web.Features.LineItems.LineItem", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.Payments.Receipt", "Receipt")
                        .WithMany("LineItems")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SP19.P04.Web.Features.LineItems.MenuItem", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.Menus.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Payments.PaymentOption", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.Customers.Customer", "Customer")
                        .WithMany("PaymentOptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("SP19.P04.Web.Features.Shared.Address", "BillingAddress", b1 =>
                        {
                            b1.Property<int>("PaymentOptionId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasMaxLength(64);

                            b1.Property<string>("Line1")
                                .HasMaxLength(64);

                            b1.Property<string>("Line2")
                                .HasMaxLength(64);

                            b1.Property<string>("State")
                                .HasMaxLength(2);

                            b1.Property<string>("ZipCode")
                                .HasMaxLength(5);

                            b1.HasKey("PaymentOptionId");

                            b1.ToTable("PaymentOption");

                            b1.HasOne("SP19.P04.Web.Features.Payments.PaymentOption")
                                .WithOne("BillingAddress")
                                .HasForeignKey("SP19.P04.Web.Features.Shared.Address", "PaymentOptionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Payments.Receipt", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.Payments.PaymentOption", "PaymentOption")
                        .WithMany()
                        .HasForeignKey("PaymentOptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Tables.CustomerTableBill", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.Customers.Customer", "Customer")
                        .WithMany("TableBills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SP19.P04.Web.Features.Tables.TableBill", "TableBill")
                        .WithMany("Customers")
                        .HasForeignKey("TableBillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Tables.TableBill", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.Tables.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SP19.P04.Web.Features.Tables.TableFoodItem", b =>
                {
                    b.HasOne("SP19.P04.Web.Features.LineItems.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SP19.P04.Web.Features.Tables.TableBill", "TableBill")
                        .WithMany("TableFoodItems")
                        .HasForeignKey("TableBillId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
